[{"/Users/timla/Desktop/ecommerce/src/index.js":"1","/Users/timla/Desktop/ecommerce/src/App.js":"2","/Users/timla/Desktop/ecommerce/src/components/Products/Products.js":"3","/Users/timla/Desktop/ecommerce/src/components/Products/Product/Product.js":"4","/Users/timla/Desktop/ecommerce/src/components/Products/Product/styles.js":"5","/Users/timla/Desktop/ecommerce/src/components/index.js":"6","/Users/timla/Desktop/ecommerce/src/components/Navbar/Navbar.js":"7","/Users/timla/Desktop/ecommerce/src/components/Navbar/styles.js":"8","/Users/timla/Desktop/ecommerce/src/components/Products/styles.js":"9","/Users/timla/Desktop/ecommerce/src/lib/commerce.js":"10","/Users/timla/Desktop/ecommerce/src/components/Cart/Cart.js":"11","/Users/timla/Desktop/ecommerce/src/components/Cart/styles.js":"12","/Users/timla/Desktop/ecommerce/src/components/Cart/CartItem/CartItem.js":"13","/Users/timla/Desktop/ecommerce/src/components/Cart/CartItem/styles.js":"14","/Users/timla/Desktop/ecommerce/src/components/CheckoutForm/Checkout/Checkout.js":"15","/Users/timla/Desktop/ecommerce/src/components/CheckoutForm/Checkout/styles.js":"16","/Users/timla/Desktop/ecommerce/src/components/CheckoutForm/AddressForm.js":"17","/Users/timla/Desktop/ecommerce/src/components/CheckoutForm/PaymentForm.js":"18","/Users/timla/Desktop/ecommerce/src/components/CheckoutForm/CustomerTextField.js":"19","/Users/timla/Desktop/ecommerce/src/components/CheckoutForm/Review.js":"20"},{"size":141,"mtime":1607391215069,"results":"21","hashOfConfig":"22"},{"size":2589,"mtime":1607561629873,"results":"23","hashOfConfig":"22"},{"size":635,"mtime":1607452753875,"results":"24","hashOfConfig":"22"},{"size":1259,"mtime":1607452850393,"results":"25","hashOfConfig":"22"},{"size":343,"mtime":1607432402162,"results":"26","hashOfConfig":"22"},{"size":231,"mtime":1607474142516,"results":"27","hashOfConfig":"22"},{"size":1493,"mtime":1607472604782,"results":"28","hashOfConfig":"22"},{"size":1565,"mtime":1607393136279,"results":"29","hashOfConfig":"22"},{"size":287,"mtime":1607393408290,"results":"30","hashOfConfig":"22"},{"size":123,"mtime":1607434645184,"results":"31","hashOfConfig":"22"},{"size":2078,"mtime":1607473667862,"results":"32","hashOfConfig":"22"},{"size":570,"mtime":1607453961500,"results":"33","hashOfConfig":"22"},{"size":1567,"mtime":1607473413694,"results":"34","hashOfConfig":"22"},{"size":375,"mtime":1607455563555,"results":"35","hashOfConfig":"22"},{"size":3827,"mtime":1607567504571,"results":"36","hashOfConfig":"22"},{"size":1158,"mtime":1607474069985,"results":"37","hashOfConfig":"22"},{"size":5260,"mtime":1607561923805,"results":"38","hashOfConfig":"22"},{"size":2736,"mtime":1607567418319,"results":"39","hashOfConfig":"22"},{"size":491,"mtime":1607563237082,"results":"40","hashOfConfig":"22"},{"size":1026,"mtime":1607558518941,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1hm2v4n",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/timla/Desktop/ecommerce/src/index.js",[],["85","86"],"/Users/timla/Desktop/ecommerce/src/App.js",[],"/Users/timla/Desktop/ecommerce/src/components/Products/Products.js",[],"/Users/timla/Desktop/ecommerce/src/components/Products/Product/Product.js",[],"/Users/timla/Desktop/ecommerce/src/components/Products/Product/styles.js",[],"/Users/timla/Desktop/ecommerce/src/components/index.js",[],"/Users/timla/Desktop/ecommerce/src/components/Navbar/Navbar.js",["87","88"],"import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Badge,\n  MenuItem,\n  Menu,\n  Typography,\n} from '@material-ui/core';\nimport { ShoppingCart } from '@material-ui/icons';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport logo from '../../assets/commerce.png';\nimport useStyles from './styles';\n\nconst Navbar = ({ totalItems }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  return (\n    <>\n      <AppBar position='fixed' className={classes.appBar} color='inherit'>\n        <Toolbar>\n          <Typography\n            variant='h6'\n            component={Link}\n            to='/'\n            className={classes.title}\n            color='inherit'\n          >\n            <img\n              src={logo}\n              alt='Commerce.js'\n              height='25px'\n              className={classes.image}\n            />\n            Commerce.js\n          </Typography>\n          <div className={classes.grow} />\n          {location.pathname === '/' && (\n            <div className={classes.button}>\n              <IconButton\n                component={Link}\n                to='/cart'\n                aria-label='Show cart items'\n                color='inherit'\n              >\n                <Badge badgeContent={totalItems} color='secondary'>\n                  <ShoppingCart />\n                </Badge>\n              </IconButton>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default Navbar;\n","/Users/timla/Desktop/ecommerce/src/components/Navbar/styles.js",[],"/Users/timla/Desktop/ecommerce/src/components/Products/styles.js",[],"/Users/timla/Desktop/ecommerce/src/lib/commerce.js",[],"/Users/timla/Desktop/ecommerce/src/components/Cart/Cart.js",[],"/Users/timla/Desktop/ecommerce/src/components/Cart/styles.js",[],"/Users/timla/Desktop/ecommerce/src/components/Cart/CartItem/CartItem.js",[],"/Users/timla/Desktop/ecommerce/src/components/Cart/CartItem/styles.js",[],"/Users/timla/Desktop/ecommerce/src/components/CheckoutForm/Checkout/Checkout.js",["89"],"/Users/timla/Desktop/ecommerce/src/components/CheckoutForm/Checkout/styles.js",[],"/Users/timla/Desktop/ecommerce/src/components/CheckoutForm/AddressForm.js",["90","91"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './CustomerTextField';\nimport { commerce } from '../../lib/commerce';\n// import { NearMeOutlined } from '@material-ui/icons';\n\nconst AddressForm = ({ checkoutToken, next }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n  const methods = useForm();\n\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\n    id: code,\n    label: name,\n  }));\n  const subdivisions = Object.entries(shippingSubdivisions).map(\n    ([code, name]) => ({\n      id: code,\n      label: name,\n    })\n  );\n  const options = shippingOptions.map((sO) => ({\n    id: sO.id,\n    label: `${sO.description} - (${sO.price.formatted_with_symbol})`,\n  }));\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(\n      checkoutTokenId\n    );\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\n      countryCode\n    );\n\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (\n    checkoutTokenId,\n    country,\n    region = null\n  ) => {\n    const options = await commerce.checkout.getShippingOptions(\n      checkoutTokenId,\n      {\n        country,\n        region,\n      }\n    );\n\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (shippingSubdivision)\n      fetchShippingOptions(\n        checkoutToken.id,\n        shippingCountry,\n        shippingSubdivision\n      );\n  }, [shippingSubdivision]);\n\n  return (\n    <>\n      <Typography variant='h6' gutterBottom>\n        Shipping Address\n      </Typography>\n      <FormProvider {...methods}>\n        <form\n          onSubmit={methods.handleSubmit((data) =>\n            next({\n              ...data,\n              shippingCountry,\n              shippingSubdivision,\n              shippingOption,\n            })\n          )}\n        >\n          <Grid container spacing={3}>\n            <FormInput name='firstName' label='First name' />\n            <FormInput name='lastName' label='Last name' />\n            <FormInput name='address1' label='Address' />\n            <FormInput name='email' label='Email' />\n            <FormInput name='city' label='City' />\n            <FormInput name='zip' label='ZIP / Postal Code' />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select\n                value={shippingCountry}\n                fullWidth\n                onChange={(e) => setShippingCountry(e.target.value)}\n              >\n                {countries.map((country) => (\n                  <MenuItem key={country.id} value={country.id}>\n                    {country.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select\n                value={shippingSubdivision}\n                fullWidth\n                onChange={(e) => setShippingSubdivision(e.target.value)}\n              >\n                {subdivisions.map((subdivision) => (\n                  <MenuItem key={subdivision.id} value={subdivision.id}>\n                    {subdivision.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select\n                value={shippingOption}\n                fullWidth\n                onChange={(e) => setShippingOption(e.target.value)}\n              >\n                {options.map((option) => (\n                  <MenuItem key={option.id} value={option.id}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Button component={Link} to='/cart' variant='outlined'>\n              Back to Cart\n            </Button>\n            <Button type='submit' variant='contained' color='primary'>\n              Next\n            </Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\n\nexport default AddressForm;\n","/Users/timla/Desktop/ecommerce/src/components/CheckoutForm/PaymentForm.js",[],"/Users/timla/Desktop/ecommerce/src/components/CheckoutForm/CustomerTextField.js",[],"/Users/timla/Desktop/ecommerce/src/components/CheckoutForm/Review.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":7,"column":3,"nodeType":"98","messageId":"99","endLine":7,"endColumn":11},{"ruleId":"96","severity":1,"message":"100","line":8,"column":3,"nodeType":"98","messageId":"99","endLine":8,"endColumn":7},{"ruleId":"101","severity":1,"message":"102","line":44,"column":6,"nodeType":"103","endLine":44,"endColumn":8,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":76,"column":6,"nodeType":"103","endLine":76,"endColumn":8,"suggestions":"106"},{"ruleId":"101","severity":1,"message":"107","line":89,"column":6,"nodeType":"103","endLine":89,"endColumn":27,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep', 'cart.id', and 'history'. Either include them or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["112"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [activeStep, cart.id, history]",{"range":"120","text":"121"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"122","text":"123"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"124","text":"125"},[1197,1199],"[activeStep, cart.id, history]",[2192,2194],"[checkoutToken.id]",[2475,2496],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]